@model EEIMS.Models.FirstTimeAddEmployeeViewModel

@{
    ViewBag.Title = "FirstTimeAddEmployee";
}

<div class="container-fluid px-4">
    <h3 class="mt-4">Dashboard</h3>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Employee Details</li>
    </ol>


    @using (Html.BeginForm("FirstTimeAddEmployee", "Employee", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="row">
                <div class="col-md-6 offset-md-3">
                    <h4 class="mb-4 text-center fw-medium">Add Your Details</h4>
                    <hr class="my-4">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="text" class="form-control" value="@Model.Email" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Employee ID</label>
                        <input type="text" class="form-control" value="@Model.EmployeeId" readonly />
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Organization, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }

</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
